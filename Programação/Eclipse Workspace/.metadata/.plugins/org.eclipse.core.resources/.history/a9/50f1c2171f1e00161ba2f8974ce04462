package dominio;



/**
 * @author 1978233
 * @version 1.0
 * @created 28-abr-2016 21:05:37
 */
public class Banco {

	private ContaCorrente[] contas;
        private static int proximoNumero = 1;
        private int CONTADOR = 0;

	public Banco(){
            contas = new ContaCorrente[100];
	}

	/**
	 * 
	 * @param especial
	 * @param saldoInicial
	 * @param limite
	 */
	public int criarConta(boolean especial, double saldoInicial, double limite){
            int numero = proximoNumero++;
            ContaCorrente conta = new ContaCorrente(especial, limite, numero, saldoInicial);
            contas[CONTADOR++] = conta;
            return numero;
	}
        
	public int criarConta(double saldoInicial){
            return criarConta(false,saldoInicial,0);
	}

	/**
	 * 
	 * @param conta
	 * @param valor
	 */
	public boolean depositar(int conta, double valor){
            ContaCorrente contaCorrente = localizarConta(conta);
            if (contaCorrente != null){
                contaCorrente.depositar(valor);
                return true;
            } else {
                return false;
            }
	}

	/**
	 * 
	 * @param conta
	 */
	public boolean excluirConta(int conta){
            return false;
	}

	/**
	 * 
	 * @param conta
	 */
	private ContaCorrente localizarConta(int conta){
            for (ContaCorrente contaCorrente:contas){
                if (contaCorrente != null && contaCorrente.getNumero() == conta){
                    return contaCorrente;
                }
            }
            return null;
	}

	/**
	 * 
	 * @param conta
	 * @param valor
	 */
	public boolean sacar(int conta, double valor){
            ContaCorrente contaCorrente = localizarConta(conta);
            if (contaCorrente != null){
                contaCorrente.sacar(valor);
                return true;
            } else {
                return false;
            }

	}

	/**
	 * 
	 * @param contaOrigem
	 * @param contaDestino
	 * @param valor
	 */
	public boolean transferir(int contaOrigem, int contaDestino, double valor){
            if (sacar(contaOrigem, valor)){
                depositar(contaDestino, valor);
                return true;
            } else {
                return false;
            }
	}
        
        public Movimentacao[] extrato(int conta){
            ContaCorrente contaCorrente = localizarConta(conta);
            if (contaCorrente != null){
                return contaCorrente.movimentacoes();
            } else {
                return null;
            }
        }

}